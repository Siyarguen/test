package metismodel;
// default package
// Generated 05.09.2018 08:32:48 by Hibernate Tools 4.3.5.Final

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Produktionsweg generated by hbm2java
 */
@Entity
@Table(name = "produktionsweg", catalog = "metis")
public class Produktionsweg implements java.io.Serializable {

	private int idProduktionsweg;
	private String nameKurz;
	private String name;
	private String beschreibung;
	private String ftp;
	private List<Quelle> quelles = new ArrayList<Quelle>();
	private List<Datenlieferung> datenlieferungs = new ArrayList<Datenlieferung>();
	private List<Periodika> periodikas = new ArrayList<Periodika>();
	private List<Dokument> dokuments = new ArrayList<Dokument>();

	public Produktionsweg() {
	}

	public Produktionsweg(String nameKurz, String name, String beschreibung, String ftp, List<Quelle> quelles,
			List<Datenlieferung> datenlieferungs, List<Periodika> periodikas, List<Dokument> dokuments) {
		this.nameKurz = nameKurz;
		this.name = name;
		this.beschreibung = beschreibung;
		this.ftp = ftp;
		this.quelles = quelles;
		this.datenlieferungs = datenlieferungs;
		this.periodikas = periodikas;
		this.dokuments = dokuments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idproduktionsweg", unique = true, nullable = false)
	public int getIdProduktionsweg() {
		return this.idProduktionsweg;
	}

	public void setIdProduktionsweg(int idProduktionsweg) {
		this.idProduktionsweg = idProduktionsweg;
	}

	@Column(name = "Namekurz", length = 10)
	public String getNameKurz() {
		return this.nameKurz;
	}

	public void setNameKurz(String nameKurz) {
		this.nameKurz = nameKurz;
	}

	@Column(name = "Name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Beschreibung")
	public String getBeschreibung() {
		return this.beschreibung;
	}

	public void setBeschreibung(String beschreibung) {
		this.beschreibung = beschreibung;
	}

	@Column(name = "ftp")
	public String getFtp() {
		return this.ftp;
	}

	public void setFtp(String ftp) {
		this.ftp = ftp;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "quelle_hat_produktionsweg", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Produktionsweg_idproduktionsweg", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Quelle_idquelle", nullable = false, updatable = false) })
	public List<Quelle> getQuelles() {
		return this.quelles;
	}

	public void setQuelles(List<Quelle> quelles) {
		this.quelles = quelles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "produktionsweg")
	public List<Datenlieferung> getDatenlieferungs() {
		return this.datenlieferungs;
	}

	public void setDatenlieferungs(List<Datenlieferung> datenlieferungs) {
		this.datenlieferungs = datenlieferungs;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "periodika_hat_produktionsweg", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Produktionsweg_idproduktionsweg", nullable = false, updatable = false) })
	public List<Periodika> getPeriodikas() {
		return this.periodikas;
	}

	public void setPeriodikas(List<Periodika> periodikas) {
		this.periodikas = periodikas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "produktionsweg")
	public List<Dokument> getDokuments() {
		return this.dokuments;
	}

	public void setDokuments(List<Dokument> dokuments) {
		this.dokuments = dokuments;
	}

	@Override
	public String toString() {
		return "Produktionsweg [idProduktionsweg=" + idProduktionsweg + ", nameKurz=" + nameKurz + ", name=" + name
				+ ", beschreibung=" + beschreibung + ", ftp=" + ftp + ", quelles=" + quelles + ", datenlieferungs="
				+ datenlieferungs + ", periodikas=" + periodikas + ", dokuments=" + dokuments + "]";
	}

}
