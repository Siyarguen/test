package metismodel;
// default package
// Generated 05.09.2018 08:32:48 by Hibernate Tools 4.3.5.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Periodika generated by hbm2java
 */
@Entity
@Table(name = "periodika", catalog = "metis")
public class Periodika implements java.io.Serializable {

	private PeriodikaId id;
	private Bearbeiter bearbeiter;
	private Lieferant lieferant;
	private Verlag verlag;
	private String vonBand;
	private int vonJahr;
	private String vonHeft;
	private String bisBand;
	private int bisJahr;
	private String bisHeft;
	private Boolean aktuelleVersion;
	private Boolean auszuwerten;
	private Boolean autoFertigsetzen;
	private String tibsignatur;
	private String tibstandort;
	private String titelLang;
	private String titelKuerzel;
	private String subTitel;
	private String url;
	private Boolean printBezug;
	private Boolean kostenlos;
	private Boolean zeitschrift;
	private String bemerkungBibliografie;
	private Boolean openAccess;
	private String dpsreste;
	private Date gekuendigtZum;
	private String bemerkungBezug;
	private String bemerkungErfassung;
	private List<Sprache> spraches = new ArrayList<Sprache>();
	private List<Periodikasynonyme> periodikasynonymes = new ArrayList<Periodikasynonyme>();
	private List<Dokumentform> dokumentforms = new ArrayList<Dokumentform>();
	private List<Fachdatenbank> fachdatenbanks = new ArrayList<Fachdatenbank>();
	private List<Benachrichtigung> benachrichtigungs = new ArrayList<Benachrichtigung>();
	private List<Konferenzreihe> konferenzreihes = new ArrayList<Konferenzreihe>();
	private List<Klassifikation> klassifikations = new ArrayList<Klassifikation>();
	private List<Produktionsweg> produktionswegs = new ArrayList<Produktionsweg>();
	private List<Wiedervorlage> wiedervorlages = new ArrayList<Wiedervorlage>();
	private List<Quelle> quelles = new ArrayList<Quelle>();
	private List<Issn> issns = new ArrayList<Issn>();
	private List<Protokoll> protokolls = new ArrayList<Protokoll>();
	private List<Dokumentart> dokumentarts = new ArrayList<Dokumentart>();

	public Periodika() {
	}

	public Periodika(PeriodikaId id) {
		this.id = id;
	}

	public Periodika(PeriodikaId id, Bearbeiter bearbeiter, Lieferant lieferant, Verlag verlag, String vonBand,
			int vonJahr, String vonHeft, String bisBand, int bisJahr, String bisHeft, Boolean aktuelleVersion,
			Boolean auszuwerten, Boolean autoFertigsetzen, String tibsignatur, String tibstandort, String titelLang,
			String titelKuerzel, String subTitel, String url, Boolean printBezug, Boolean kostenlos,
			Boolean zeitschrift, String bemerkungBibliografie, Boolean openAccess, String dpsreste, Date gekuendigtZum,
			String bemerkungBezug, String bemerkungErfassung, List<Sprache> spraches,
			List<Periodikasynonyme> periodikasynonymes, List<Dokumentform> dokumentforms,
			List<Fachdatenbank> fachdatenbanks, List<Benachrichtigung> benachrichtigungs,
			List<Konferenzreihe> konferenzreihes, List<Klassifikation> klassifikations,
			List<Produktionsweg> produktionswegs, List<Wiedervorlage> wiedervorlages, List<Quelle> quelles,
			List<Issn> issns, List<Protokoll> protokolls, List<Dokumentart> dokumentarts) {
		this.id = id;
		this.bearbeiter = bearbeiter;
		this.lieferant = lieferant;
		this.verlag = verlag;
		this.vonBand = vonBand;
		this.vonJahr = vonJahr;
		this.vonHeft = vonHeft;
		this.bisBand = bisBand;
		this.bisJahr = bisJahr;
		this.bisHeft = bisHeft;
		this.aktuelleVersion = aktuelleVersion;
		this.auszuwerten = auszuwerten;
		this.autoFertigsetzen = autoFertigsetzen;
		this.tibsignatur = tibsignatur;
		this.tibstandort = tibstandort;
		this.titelLang = titelLang;
		this.titelKuerzel = titelKuerzel;
		this.subTitel = subTitel;
		this.url = url;
		this.printBezug = printBezug;
		this.kostenlos = kostenlos;
		this.zeitschrift = zeitschrift;
		this.bemerkungBibliografie = bemerkungBibliografie;
		this.openAccess = openAccess;
		this.dpsreste = dpsreste;
		this.gekuendigtZum = gekuendigtZum;
		this.bemerkungBezug = bemerkungBezug;
		this.bemerkungErfassung = bemerkungErfassung;
		this.spraches = spraches;
		this.periodikasynonymes = periodikasynonymes;
		this.dokumentforms = dokumentforms;
		this.fachdatenbanks = fachdatenbanks;
		this.benachrichtigungs = benachrichtigungs;
		this.konferenzreihes = konferenzreihes;
		this.klassifikations = klassifikations;
		this.produktionswegs = produktionswegs;
		this.wiedervorlages = wiedervorlages;
		this.quelles = quelles;
		this.issns = issns;
		this.protokolls = protokolls;
		this.dokumentarts = dokumentarts;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "zcode", column = @Column(name = "ZCode", nullable = false)),
			@AttributeOverride(name = "version", column = @Column(name = "Version", nullable = false)) })
	public PeriodikaId getId() {
		return this.id;
	}

	public void setId(PeriodikaId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Verantwortlicher")
	public Bearbeiter getBearbeiter() {
		return this.bearbeiter;
	}

	public void setBearbeiter(Bearbeiter bearbeiter) {
		this.bearbeiter = bearbeiter;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Lieferant_idlieferant")
	public Lieferant getLieferant() {
		return this.lieferant;
	}

	public void setLieferant(Lieferant lieferant) {
		this.lieferant = lieferant;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Verlag_idverlag")
	public Verlag getVerlag() {
		return this.verlag;
	}

	public void setVerlag(Verlag verlag) {
		this.verlag = verlag;
	}

	@Column(name = "vonband", length = 10)
	public String getVonBand() {
		return this.vonBand;
	}

	public void setVonBand(String vonBand) {
		this.vonBand = vonBand;
	}

	@Column(name = "vonjahr")
	public int getVonJahr() {
		return this.vonJahr;
	}

	public void setVonJahr(int vonJahr) {
		this.vonJahr = vonJahr;
	}

	@Column(name = "vonheft", length = 10)
	public String getVonHeft() {
		return this.vonHeft;
	}

	public void setVonHeft(String vonHeft) {
		this.vonHeft = vonHeft;
	}

	@Column(name = "bisband", length = 10)
	public String getBisBand() {
		return this.bisBand;
	}

	public void setBisBand(String bisBand) {
		this.bisBand = bisBand;
	}

	@Column(name = "bisjahr")
	public int getBisJahr() {
		return this.bisJahr;
	}

	public void setBisJahr(int bisJahr) {
		this.bisJahr = bisJahr;
	}

	@Column(name = "bisheft", length = 10)
	public String getBisHeft() {
		return this.bisHeft;
	}

	public void setBisHeft(String bisHeft) {
		this.bisHeft = bisHeft;
	}

	@Column(name = "aktuelleversion")
	public Boolean getAktuelleVersion() {
		return this.aktuelleVersion;
	}

	public void setAktuelleVersion(Boolean aktuelleVersion) {
		this.aktuelleVersion = aktuelleVersion;
	}

	@Column(name = "auszuwerten")
	public Boolean getAuszuwerten() {
		return this.auszuwerten;
	}

	public void setAuszuwerten(Boolean auszuwerten) {
		this.auszuwerten = auszuwerten;
	}

	@Column(name = "autofertigsetzen")
	public Boolean getAutoFertigsetzen() {
		return this.autoFertigsetzen;
	}

	public void setAutoFertigsetzen(Boolean autoFertigsetzen) {
		this.autoFertigsetzen = autoFertigsetzen;
	}

	@Column(name = "TIBSignatur", length = 45)
	public String getTibsignatur() {
		return this.tibsignatur;
	}

	public void setTibsignatur(String tibsignatur) {
		this.tibsignatur = tibsignatur;
	}

	@Column(name = "TIBStandort", length = 45)
	public String getTibstandort() {
		return this.tibstandort;
	}

	public void setTibstandort(String tibstandort) {
		this.tibstandort = tibstandort;
	}

	@Column(name = "Titellang")
	public String getTitelLang() {
		return this.titelLang;
	}

	public void setTitelLang(String titelLang) {
		this.titelLang = titelLang;
	}

	@Column(name = "Titelkuerzel")
	public String getTitelKuerzel() {
		return this.titelKuerzel;
	}

	public void setTitelKuerzel(String titelKuerzel) {
		this.titelKuerzel = titelKuerzel;
	}

	@Column(name = "Subtitel")
	public String getSubTitel() {
		return this.subTitel;
	}

	public void setSubTitel(String subTitel) {
		this.subTitel = subTitel;
	}

	@Column(name = "URL")
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Column(name = "Printbezug")
	public Boolean getPrintBezug() {
		return this.printBezug;
	}

	public void setPrintBezug(Boolean printBezug) {
		this.printBezug = printBezug;
	}

	@Column(name = "Kostenlos")
	public Boolean getKostenlos() {
		return this.kostenlos;
	}

	public void setKostenlos(Boolean kostenlos) {
		this.kostenlos = kostenlos;
	}

	@Column(name = "Zeitschrift")
	public Boolean getZeitschrift() {
		return this.zeitschrift;
	}

	public void setZeitschrift(Boolean zeitschrift) {
		this.zeitschrift = zeitschrift;
	}

	@Column(name = "Bemerkungbibliografie", length = 16777215)
	public String getBemerkungBibliografie() {
		return this.bemerkungBibliografie;
	}

	public void setBemerkungBibliografie(String bemerkungBibliografie) {
		this.bemerkungBibliografie = bemerkungBibliografie;
	}

	@Column(name = "Openaccess")
	public Boolean getOpenAccess() {
		return this.openAccess;
	}

	public void setOpenAccess(Boolean openAccess) {
		this.openAccess = openAccess;
	}

	@Column(name = "DPSReste", length = 65535)
	public String getDpsreste() {
		return this.dpsreste;
	}

	public void setDpsreste(String dpsreste) {
		this.dpsreste = dpsreste;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "gekuendigtzum", length = 10)
	public Date getGekuendigtZum() {
		return this.gekuendigtZum;
	}

	public void setGekuendigtZum(Date gekuendigtZum) {
		this.gekuendigtZum = gekuendigtZum;
	}

	@Column(name = "Bemerkungbezug", length = 16777215)
	public String getBemerkungBezug() {
		return this.bemerkungBezug;
	}

	public void setBemerkungBezug(String bemerkungBezug) {
		this.bemerkungBezug = bemerkungBezug;
	}

	@Column(name = "Bemerkungerfassung", length = 16777215)
	public String getBemerkungErfassung() {
		return this.bemerkungErfassung;
	}

	public void setBemerkungErfassung(String bemerkungErfassung) {
		this.bemerkungErfassung = bemerkungErfassung;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "periodika_hat_sprache", catalog = "metis", joinColumns = {
			@JoinColumn(name = "periodika_ZCode", nullable = false, updatable = false),
			@JoinColumn(name = "periodika_Version", nullable = false, updatable = false) 
			})
	public List<Sprache> getSpraches() {
		return this.spraches;
	}

	public void setSpraches(List<Sprache> spraches) {
		this.spraches = spraches;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "periodika")
	public List<Periodikasynonyme> getPeriodikasynonymes() {
		return this.periodikasynonymes;
	}

	public void setPeriodikasynonymes(List<Periodikasynonyme> periodikasynonymes) {
		this.periodikasynonymes = periodikasynonymes;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "periodika_hat_dokumentform", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Periodika_ZCode", nullable = false, updatable = false),
			@JoinColumn(name = "Periodika_Version", nullable = false, updatable = false) })
	public List<Dokumentform> getDokumentforms() {
		return this.dokumentforms;
	}

	public void setDokumentforms(List<Dokumentform> dokumentforms) {
		this.dokumentforms = dokumentforms;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "periodika_hat_fachdatenbank", catalog = "metis", joinColumns = {
			@JoinColumn(name = "periodika_ZCode", nullable = false, updatable = false),
			@JoinColumn(name = "periodika_Version", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "fachdatenbank_idfachdatenbank", nullable = false, updatable = false) })
	public List<Fachdatenbank> getFachdatenbanks() {
		return this.fachdatenbanks;
	}

	public void setFachdatenbanks(List<Fachdatenbank> fachdatenbanks) {
		this.fachdatenbanks = fachdatenbanks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "periodika")
	public List<Benachrichtigung> getBenachrichtigungs() {
		return this.benachrichtigungs;
	}

	public void setBenachrichtigungs(List<Benachrichtigung> benachrichtigungs) {
		this.benachrichtigungs = benachrichtigungs;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "periodika_berichtetueber_konferenzreihe", catalog = "metis", joinColumns = {
			@JoinColumn(name = "periodika_ZCode", nullable = false, updatable = false),
			@JoinColumn(name = "periodika_Version", nullable = false, updatable = false) })
	public List<Konferenzreihe> getKonferenzreihes() {
		return this.konferenzreihes;
	}

	public void setKonferenzreihes(List<Konferenzreihe> konferenzreihes) {
		this.konferenzreihes = konferenzreihes;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "periodika_hat_klassifikation", catalog = "metis", joinColumns = {
			@JoinColumn(name = "periodika_ZCode", nullable = false, updatable = false),
			@JoinColumn(name = "periodika_Version", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "klassifikation_idklassifikation", nullable = false, updatable = false) })
	public List<Klassifikation> getKlassifikations() {
		return this.klassifikations;
	}

	public void setKlassifikations(List<Klassifikation> klassifikations) {
		this.klassifikations = klassifikations;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "periodika_hat_produktionsweg", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Periodika_ZCode", nullable = false, updatable = false),
			@JoinColumn(name = "Periodika_Version", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Produktionsweg_idproduktionsweg", nullable = false, updatable = false) })
	public List<Produktionsweg> getProduktionswegs() {
		return this.produktionswegs;
	}

	public void setProduktionswegs(List<Produktionsweg> produktionswegs) {
		this.produktionswegs = produktionswegs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "periodika")
	public List<Wiedervorlage> getWiedervorlages() {
		return this.wiedervorlages;
	}

	public void setWiedervorlages(List<Wiedervorlage> wiedervorlages) {
		this.wiedervorlages = wiedervorlages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "periodika")
	public List<Quelle> getQuelles() {
		return this.quelles;
	}

	public void setQuelles(List<Quelle> quelles) {
		this.quelles = quelles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "periodika")
	public List<Issn> getIssns() {
		return this.issns;
	}

	public void setIssns(List<Issn> issns) {
		this.issns = issns;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "periodika")
	public List<Protokoll> getProtokolls() {
		return this.protokolls;
	}

	public void setProtokolls(List<Protokoll> protokolls) {
		this.protokolls = protokolls;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "periodika_hat_dokumentart", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Periodika_ZCode", nullable = false, updatable = false),
			@JoinColumn(name = "Periodika_Version", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Dokumentart_iddokumentart", nullable = false, updatable = false) })
	public List<Dokumentart> getDokumentarts() {
		return this.dokumentarts;
	}

	public void setDokumentarts(List<Dokumentart> dokumentarts) {
		this.dokumentarts = dokumentarts;
	}

	@Override
	public String toString() {
		return "Periodika [id=" + id + ", bearbeiter=" + bearbeiter + ", lieferant=" + lieferant + ", verlag=" + verlag
				+ ", vonBand=" + vonBand + ", vonJahr=" + vonJahr + ", vonHeft=" + vonHeft + ", bisBand=" + bisBand
				+ ", bisJahr=" + bisJahr + ", bisHeft=" + bisHeft + ", aktuelleVersion=" + aktuelleVersion
				+ ", auszuwerten=" + auszuwerten + ", autoFertigsetzen=" + autoFertigsetzen + ", tibsignatur="
				+ tibsignatur + ", tibstandort=" + tibstandort + ", titelLang=" + titelLang + ", titelKuerzel="
				+ titelKuerzel + ", subTitel=" + subTitel + ", url=" + url + ", printBezug=" + printBezug
				+ ", kostenlos=" + kostenlos + ", zeitschrift=" + zeitschrift + ", bemerkungBibliografie="
				+ bemerkungBibliografie + ", openAccess=" + openAccess + ", dpsreste=" + dpsreste + ", gekuendigtZum="
				+ gekuendigtZum + ", bemerkungBezug=" + bemerkungBezug + ", bemerkungErfassung=" + bemerkungErfassung
				+ ", spraches=" + spraches + ", periodikasynonymes=" + periodikasynonymes + ", dokumentforms="
				+ dokumentforms + ", fachdatenbanks=" + fachdatenbanks + ", benachrichtigungs=" + benachrichtigungs
				+ ", konferenzreihes=" + konferenzreihes + ", klassifikations=" + klassifikations + ", produktionswegs="
				+ produktionswegs + ", wiedervorlages=" + wiedervorlages + ", quelles=" + quelles + ", issns=" + issns
				+ ", protokolls=" + protokolls + ", dokumentarts=" + dokumentarts + "]";
	}

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
