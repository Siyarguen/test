package metismodel;
// default package
// Generated 05.09.2018 08:32:48 by Hibernate Tools 4.3.5.Final

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Institution generated by hbm2java
 */
@Entity
@Table(name = "institution", catalog = "metis")
public class Institution implements java.io.Serializable {

	private int idInstitution;
	private Allelaender allelaender;
	private String institutionName;
	private String institutionNameKurz;
	private String ort;
	private String bundesstaat;
	private String url;
	private String isni;
	private String scopus;
	private String bemerkung;
	private List<Quelle> quelles = new ArrayList<Quelle>();
	private List<Dokument> dokuments = new ArrayList<Dokument>();
	private List<Protokoll> protokolls = new ArrayList<Protokoll>();
	private List<Konferenzereignis> konferenzereignises = new ArrayList<Konferenzereignis>();

	public Institution() {
	}

	public Institution(Allelaender allelaender, String institutionName, String institutionNameKurz, String ort,
			String bundesstaat, String url, String isni, String scopus, String bemerkung, List<Quelle> quelles,
			List<Dokument> dokuments, List<Protokoll> protokolls, List<Konferenzereignis> konferenzereignises) {
		this.allelaender = allelaender;
		this.institutionName = institutionName;
		this.institutionNameKurz = institutionNameKurz;
		this.ort = ort;
		this.bundesstaat = bundesstaat;
		this.url = url;
		this.isni = isni;
		this.scopus = scopus;
		this.bemerkung = bemerkung;
		this.quelles = quelles;
		this.dokuments = dokuments;
		this.protokolls = protokolls;
		this.konferenzereignises = konferenzereignises;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idinstitution", unique = true, nullable = false)
	public int getIdInstitution() {
		return this.idInstitution;
	}

	public void setIdInstitution(int idInstitution) {
		this.idInstitution = idInstitution;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "landcode")
	public Allelaender getAllelaender() {
		return this.allelaender;
	}

	public void setAllelaender(Allelaender allelaender) {
		this.allelaender = allelaender;
	}

	@Column(name = "Institutionname")
	public String getInstitutionName() {
		return this.institutionName;
	}

	public void setInstitutionName(String institutionName) {
		this.institutionName = institutionName;
	}

	@Column(name = "Institutionnamekurz", length = 45)
	public String getInstitutionNameKurz() {
		return this.institutionNameKurz;
	}

	public void setInstitutionNameKurz(String institutionNameKurz) {
		this.institutionNameKurz = institutionNameKurz;
	}

	@Column(name = "Ort", length = 100)
	public String getOrt() {
		return this.ort;
	}

	public void setOrt(String ort) {
		this.ort = ort;
	}

	@Column(name = "Bundesstaat")
	public String getBundesstaat() {
		return this.bundesstaat;
	}

	public void setBundesstaat(String bundesstaat) {
		this.bundesstaat = bundesstaat;
	}

	@Column(name = "URL")
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Column(name = "ISNI")
	public String getIsni() {
		return this.isni;
	}

	public void setIsni(String isni) {
		this.isni = isni;
	}

	@Column(name = "Scopus")
	public String getScopus() {
		return this.scopus;
	}

	public void setScopus(String scopus) {
		this.scopus = scopus;
	}

	@Column(name = "Bemerkung")
	public String getBemerkung() {
		return this.bemerkung;
	}

	public void setBemerkung(String bemerkung) {
		this.bemerkung = bemerkung;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "quelle_hrsg_von_institution", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Institution_idinstitutionen", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Quelle_idquelle", nullable = false, updatable = false) })
	public List<Quelle> getQuelles() {
		return this.quelles;
	}

	public void setQuelles(List<Quelle> quelles) {
		this.quelles = quelles;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dokument_hat_institution", catalog = "metis", joinColumns = {
			@JoinColumn(name = "institution_idinstitution", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "dokument_iddokument", nullable = false, updatable = false) })
	public List<Dokument> getDokuments() {
		return this.dokuments;
	}

	public void setDokuments(List<Dokument> dokuments) {
		this.dokuments = dokuments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "institution")
	public List<Protokoll> getProtokolls() {
		return this.protokolls;
	}

	public void setProtokolls(List<Protokoll> protokolls) {
		this.protokolls = protokolls;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "institution_veranstaltet_konferenzereignis", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Institutionen_idinstitutionen", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Konferenzereignis_idkonferenzereignis", nullable = false, updatable = false) })
	public List<Konferenzereignis> getKonferenzereignises() {
		return this.konferenzereignises;
	}

	public void setKonferenzereignises(List<Konferenzereignis> konferenzereignises) {
		this.konferenzereignises = konferenzereignises;
	}

	@Override
	public String toString() {
		return "Institution [idInstitution=" + idInstitution + ", allelaender=" + allelaender + ", institutionName="
				+ institutionName + ", institutionNameKurz=" + institutionNameKurz + ", ort=" + ort + ", bundesstaat="
				+ bundesstaat + ", url=" + url + ", isni=" + isni + ", scopus=" + scopus + ", bemerkung=" + bemerkung
				+ ", quelles=" + quelles + ", dokuments=" + dokuments + ", protokolls=" + protokolls
				+ ", konferenzereignises=" + konferenzereignises + "]";
	}

}
