package metismodel;
// default package
// Generated 05.09.2018 08:32:48 by Hibernate Tools 4.3.5.Final

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Sprache generated by hbm2java
 */
@Entity
@Table(name = "sprache", catalog = "metis")
public class Sprache implements java.io.Serializable {

	private String sprachcode;
	private Allesprachen allesprachen;
	private int sortierung;
	private List<Periodika> periodikas = new ArrayList<Periodika>();
	private List<Dokument> dokuments = new ArrayList<Dokument>();
	private List<Doktitel> doktitels = new ArrayList<Doktitel>();
	private List<BearbeiterKannSprache> bearbeiterKannSpraches = new ArrayList<BearbeiterKannSprache>();
	private List<Abstract> abstracts = new ArrayList<Abstract>();

	public Sprache() {
	}

	public Sprache(Allesprachen allesprachen) {
		this.allesprachen = allesprachen;
	}

	public Sprache(Allesprachen allesprachen, int sortierung, List<Periodika> periodikas, List<Dokument> dokuments,
			List<Doktitel> doktitels, List<BearbeiterKannSprache> bearbeiterKannSpraches, List<Abstract> abstracts) {
		this.allesprachen = allesprachen;
		this.sortierung = sortierung;
		this.periodikas = periodikas;
		this.dokuments = dokuments;
		this.doktitels = doktitels;
		this.bearbeiterKannSpraches = bearbeiterKannSpraches;
		this.abstracts = abstracts;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "allesprachen"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "sprachcode", unique = true, nullable = false, length = 2)
	public String getSprachcode() {
		return this.sprachcode;
	}

	public void setSprachcode(String sprachcode) {
		this.sprachcode = sprachcode;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Allesprachen getAllesprachen() {
		return this.allesprachen;
	}

	public void setAllesprachen(Allesprachen allesprachen) {
		this.allesprachen = allesprachen;
	}

	@Column(name = "Sortierung")
	public int getSortierung() {
		return this.sortierung;
	}

	public void setSortierung(int sortierung) {
		this.sortierung = sortierung;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	//@LazyCollection(LazyCollectionOption.FALSE)
	@JoinTable(name = "periodika_hat_sprache", catalog = "metis", joinColumns = {
			@JoinColumn(name = "sprache_sprachcode", nullable = false, updatable = false) 
			})
	public List<Periodika> getPeriodikas() {
		return this.periodikas;
	}

	public void setPeriodikas(List<Periodika> periodikas) {
		this.periodikas = periodikas;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dokument_hat_sprache", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Sprache_sprachcode", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Dokument_iddokument", nullable = false, updatable = false) })
	public List<Dokument> getDokuments() {
		return this.dokuments;
	}

	public void setDokuments(List<Dokument> dokuments) {
		this.dokuments = dokuments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sprache")
	public List<Doktitel> getDoktitels() {
		return this.doktitels;
	}

	public void setDoktitels(List<Doktitel> doktitels) {
		this.doktitels = doktitels;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sprache")
	public List<BearbeiterKannSprache> getBearbeiterKannSpraches() {
		return this.bearbeiterKannSpraches;
	}

	public void setBearbeiterKannSpraches(List<BearbeiterKannSprache> bearbeiterKannSpraches) {
		this.bearbeiterKannSpraches = bearbeiterKannSpraches;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sprache")
	public List<Abstract> getAbstracts() {
		return this.abstracts;
	}

	public void setAbstracts(List<Abstract> abstracts) {
		this.abstracts = abstracts;
	}

	@Override
	public String toString() {
		return "Sprache [sprachcode=" + sprachcode + ", allesprachen=" + allesprachen + ", sortierung=" + sortierung
				+ ", periodikas=" + periodikas + ", dokuments=" + dokuments + ", doktitels=" + doktitels
				+ ", bearbeiterKannSpraches=" + bearbeiterKannSpraches + ", abstracts=" + abstracts + "]";
	}
	
	
	

}
