package metismodel;
// default package
// Generated 05.09.2018 08:32:48 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Protokoll generated by hbm2java
 */
@Entity
@Table(name = "protokoll", catalog = "metis")
public class Protokoll implements java.io.Serializable {

	private int idArbeitsnachweis;
	private Bearbeiter bearbeiter;
	private Dokument dokument;
	private Institution institution;
	private Konferenzereignis konferenzereignis;
	private Konferenzreihe konferenzreihe;
	private Periodika periodika;
	private Quelle quelle;
	private Verlag verlag;
	private Date bearbeitungsdatum;

	public Protokoll() {
	}

	public Protokoll(Bearbeiter bearbeiter, Date bearbeitungsdatum) {
		this.bearbeiter = bearbeiter;
		this.bearbeitungsdatum = bearbeitungsdatum;
	}

	public Protokoll(Bearbeiter bearbeiter, Dokument dokument, Institution institution,
			Konferenzereignis konferenzereignis, Konferenzreihe konferenzreihe, Periodika periodika, Quelle quelle,
			Verlag verlag, Date bearbeitungsdatum) {
		this.bearbeiter = bearbeiter;
		this.dokument = dokument;
		this.institution = institution;
		this.konferenzereignis = konferenzereignis;
		this.konferenzreihe = konferenzreihe;
		this.periodika = periodika;
		this.quelle = quelle;
		this.verlag = verlag;
		this.bearbeitungsdatum = bearbeitungsdatum;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idarbeitsnachweis", unique = true, nullable = false)
	public int getIdArbeitsnachweis() {
		return this.idArbeitsnachweis;
	}

	public void setIdArbeitsnachweis(int idArbeitsnachweis) {
		this.idArbeitsnachweis = idArbeitsnachweis;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Bearbeiter_idbearbeiter", nullable = false)
	public Bearbeiter getBearbeiter() {
		return this.bearbeiter;
	}

	public void setBearbeiter(Bearbeiter bearbeiter) {
		this.bearbeiter = bearbeiter;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Dokument_iddokument")
	public Dokument getDokument() {
		return this.dokument;
	}

	public void setDokument(Dokument dokument) {
		this.dokument = dokument;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "institution_idinstitution")
	public Institution getInstitution() {
		return this.institution;
	}

	public void setInstitution(Institution institution) {
		this.institution = institution;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Konferenzereignis_idkonferenzereignis")
	public Konferenzereignis getKonferenzereignis() {
		return this.konferenzereignis;
	}

	public void setKonferenzereignis(Konferenzereignis konferenzereignis) {
		this.konferenzereignis = konferenzereignis;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "konferenzreihe_idkonferenz", referencedColumnName = "idKonferenz"),
			@JoinColumn(name = "konferenzreihe_Version", referencedColumnName = "Version") })
	public Konferenzreihe getKonferenzreihe() {
		return this.konferenzreihe;
	}

	public void setKonferenzreihe(Konferenzreihe konferenzreihe) {
		this.konferenzreihe = konferenzreihe;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "periodika_ZCode", referencedColumnName = "ZCode"),
			@JoinColumn(name = "periodika_Version", referencedColumnName = "Version") })
	public Periodika getPeriodika() {
		return this.periodika;
	}

	public void setPeriodika(Periodika periodika) {
		this.periodika = periodika;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Quelle_idquelle")
	public Quelle getQuelle() {
		return this.quelle;
	}

	public void setQuelle(Quelle quelle) {
		this.quelle = quelle;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "verlag_idverlag")
	public Verlag getVerlag() {
		return this.verlag;
	}

	public void setVerlag(Verlag verlag) {
		this.verlag = verlag;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Bearbeitungsdatum", nullable = false, length = 19)
	public Date getBearbeitungsdatum() {
		return this.bearbeitungsdatum;
	}

	public void setBearbeitungsdatum(Date bearbeitungsdatum) {
		this.bearbeitungsdatum = bearbeitungsdatum;
	}

	@Override
	public String toString() {
		return "Protokoll [idArbeitsnachweis=" + idArbeitsnachweis + ", bearbeiter=" + bearbeiter + ", dokument="
				+ dokument + ", institution=" + institution + ", konferenzereignis=" + konferenzereignis
				+ ", konferenzreihe=" + konferenzreihe + ", periodika=" + periodika + ", quelle=" + quelle + ", verlag="
				+ verlag + ", bearbeitungsdatum=" + bearbeitungsdatum + "]";
	}

}
