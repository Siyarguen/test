package metismodel;
// default package
// Generated 05.09.2018 08:32:48 by Hibernate Tools 4.3.5.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Konferenzereignis generated by hbm2java
 */
@Entity
@Table(name = "konferenzereignis", catalog = "metis")
public class Konferenzereignis implements java.io.Serializable {

	private int idKonferenzereignis;
	private Allelaender allelaender;
	private Konferenzreihe konferenzreihe;
	private Konferenzverbund konferenzverbund;
	private String konferenzereignis;
	private String konferenzzaehlung;
	private Date datum;
	private String ort;
	private String url;
	private String bezug;
	private Boolean status;
	private String bemerkung;
	private String bundesstaat;
	private List<Quelle> quelles = new ArrayList<Quelle>();
	private List<Dokument> dokuments = new ArrayList<Dokument>();
	private List<Benachrichtigung> benachrichtigungs = new ArrayList<Benachrichtigung>();
	private List<Institution> institutions = new ArrayList<Institution>();
	private List<Protokoll> protokolls = new ArrayList<Protokoll>();

	public Konferenzereignis() {
	}

	public Konferenzereignis(Konferenzreihe konferenzreihe) {
		this.konferenzreihe = konferenzreihe;
	}

	public Konferenzereignis(Allelaender allelaender, Konferenzreihe konferenzreihe, Konferenzverbund konferenzverbund,
			String konferenzereignis, String konferenzzaehlung, Date datum, String ort, String url, String bezug,
			Boolean status, String bemerkung, String bundesstaat, List<Quelle> quelles, List<Dokument> dokuments,
			List<Benachrichtigung> benachrichtigungs, List<Institution> institutions, List<Protokoll> protokolls) {
		this.allelaender = allelaender;
		this.konferenzreihe = konferenzreihe;
		this.konferenzverbund = konferenzverbund;
		this.konferenzereignis = konferenzereignis;
		this.konferenzzaehlung = konferenzzaehlung;
		this.datum = datum;
		this.ort = ort;
		this.url = url;
		this.bezug = bezug;
		this.status = status;
		this.bemerkung = bemerkung;
		this.bundesstaat = bundesstaat;
		this.quelles = quelles;
		this.dokuments = dokuments;
		this.benachrichtigungs = benachrichtigungs;
		this.institutions = institutions;
		this.protokolls = protokolls;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idkonferenzereignis", unique = true, nullable = false)
	public int getIdKonferenzereignis() {
		return this.idKonferenzereignis;
	}

	public void setIdKonferenzereignis(int idKonferenzereignis) {
		this.idKonferenzereignis = idKonferenzereignis;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "landcode")
	public Allelaender getAllelaender() {
		return this.allelaender;
	}

	public void setAllelaender(Allelaender allelaender) {
		this.allelaender = allelaender;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "Konferenzreihe_idkonferenz", referencedColumnName = "idKonferenz", nullable = false),
			@JoinColumn(name = "Konferenzreihe_Version", referencedColumnName = "Version", nullable = false) })
	public Konferenzreihe getKonferenzreihe() {
		return this.konferenzreihe;
	}

	public void setKonferenzreihe(Konferenzreihe konferenzreihe) {
		this.konferenzreihe = konferenzreihe;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Konferenzverbund_idkonferenzverbund")
	public Konferenzverbund getKonferenzverbund() {
		return this.konferenzverbund;
	}

	public void setKonferenzverbund(Konferenzverbund konferenzverbund) {
		this.konferenzverbund = konferenzverbund;
	}

	@Column(name = "Konferenzereignis")
	public String getKonferenzereignis() {
		return this.konferenzereignis;
	}

	public void setKonferenzereignis(String konferenzereignis) {
		this.konferenzereignis = konferenzereignis;
	}

	@Column(name = "Konferenzzaehlung")
	public String getKonferenzzaehlung() {
		return this.konferenzzaehlung;
	}

	public void setKonferenzzaehlung(String konferenzzaehlung) {
		this.konferenzzaehlung = konferenzzaehlung;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Datum", length = 10)
	public Date getDatum() {
		return this.datum;
	}

	public void setDatum(Date datum) {
		this.datum = datum;
	}

	@Column(name = "Ort")
	public String getOrt() {
		return this.ort;
	}

	public void setOrt(String ort) {
		this.ort = ort;
	}

	@Column(name = "URL")
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Column(name = "Bezug")
	public String getBezug() {
		return this.bezug;
	}

	public void setBezug(String bezug) {
		this.bezug = bezug;
	}

	@Column(name = "Status")
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}

	@Column(name = "Bemerkung")
	public String getBemerkung() {
		return this.bemerkung;
	}

	public void setBemerkung(String bemerkung) {
		this.bemerkung = bemerkung;
	}

	@Column(name = "Bundesstaat")
	public String getBundesstaat() {
		return this.bundesstaat;
	}

	public void setBundesstaat(String bundesstaat) {
		this.bundesstaat = bundesstaat;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "quelle_berichtet_ueber_konferenzereignis", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Konferenzereignis_idkonferenzereignis", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Quelle_idquelle", nullable = false, updatable = false) })
	public List<Quelle> getQuelles() {
		return this.quelles;
	}

	public void setQuelles(List<Quelle> quelles) {
		this.quelles = quelles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "konferenzereignis")
	public List<Dokument> getDokuments() {
		return this.dokuments;
	}

	public void setDokuments(List<Dokument> dokuments) {
		this.dokuments = dokuments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "konferenzereignis")
	public List<Benachrichtigung> getBenachrichtigungs() {
		return this.benachrichtigungs;
	}

	public void setBenachrichtigungs(List<Benachrichtigung> benachrichtigungs) {
		this.benachrichtigungs = benachrichtigungs;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "institution_veranstaltet_konferenzereignis", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Konferenzereignis_idkonferenzereignis", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Institutionen_idinstitutionen", nullable = false, updatable = false) })
	public List<Institution> getInstitutions() {
		return this.institutions;
	}

	public void setInstitutions(List<Institution> institutions) {
		this.institutions = institutions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "konferenzereignis")
	public List<Protokoll> getProtokolls() {
		return this.protokolls;
	}

	public void setProtokolls(List<Protokoll> protokolls) {
		this.protokolls = protokolls;
	}

	@Override
	public String toString() {
		return "Konferenzereignis [idKonferenzereignis=" + idKonferenzereignis + ", allelaender=" + allelaender
				+ ", konferenzreihe=" + konferenzreihe + ", konferenzverbund=" + konferenzverbund
				+ ", konferenzereignis=" + konferenzereignis + ", konferenzzaehlung=" + konferenzzaehlung + ", datum="
				+ datum + ", ort=" + ort + ", url=" + url + ", bezug=" + bezug + ", status=" + status + ", bemerkung="
				+ bemerkung + ", bundesstaat=" + bundesstaat + ", quelles=" + quelles + ", dokuments=" + dokuments
				+ ", benachrichtigungs=" + benachrichtigungs + ", institutions=" + institutions + ", protokolls="
				+ protokolls + "]";
	}

}
