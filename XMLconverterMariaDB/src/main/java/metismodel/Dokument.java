package metismodel;
// default package
// Generated 05.09.2018 08:32:48 by Hibernate Tools 4.3.5.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Dokument generated by hbm2java
 */
@Entity
@Table(name = "dokument", catalog = "metis")
public class Dokument implements java.io.Serializable {

	private int idDokument;
	private Auswertungstaetigkeit auswertungstaetigkeit;
	private Bearbeiter bearbeiterByVerantwortlicher;
	private Bearbeiter bearbeiterByAuswerter;
	private Datenlieferung datenlieferung;
	private Konferenzereignis konferenzereignis;
	private Konferenzverbund konferenzverbund;
	private Produktionsweg produktionsweg;
	private Quelle quelle;
	private Status status;
	private String dokNr;
	private String statusattribute;
	private String doi;
	private String url;
	private String vonSeite;
	private String bisSeite;
	private String seiten;
	private String tabellen;
	private String abbildungen;
	private String bibliografischeQuellen;
	private String orginalNr;
	private String foerderKz;
	private String paperNr;
	private int prodWoche;
	private int prodMonat;
	private int prodJahr;
	private Date datumMetis;
	private Date datumFtxErzeugung;
	private Date statusAenderung;
	private Boolean autindex;
	private Date openAccess;
	private String orginalKeywords;
	private String bemerkungErfassung;
	private String bemerkungBezug;
	private String bemerkungBibliografie;
	private List<Exportdienst> exportdiensts = new ArrayList<Exportdienst>();
	private List<Fachdatenbank> fachdatenbanks = new ArrayList<Fachdatenbank>();
	private List<Abstract> abstracts = new ArrayList<Abstract>();
	private List<Benachrichtigung> benachrichtigungs = new ArrayList<Benachrichtigung>();
	private List<DokumentHatAutor> dokumentHatAutors = new ArrayList<DokumentHatAutor>();
	private List<Formel> formels = new ArrayList<Formel>();
	private List<Institution> institutions = new ArrayList<Institution>();
	private List<Dokumentform> dokumentforms = new ArrayList<Dokumentform>();
	private List<Dokfeld> dokfelds = new ArrayList<Dokfeld>();
	private List<Dateilink> dateilinks = new ArrayList<Dateilink>();
	private List<Doktitel> doktitels = new ArrayList<Doktitel>();
	private List<Sprache> spraches = new ArrayList<Sprache>();
	private List<Dokumentart> dokumentarts = new ArrayList<Dokumentart>();
	private List<Protokoll> protokolls = new ArrayList<Protokoll>();
	private List<DokumentHatKlassifikation> dokumentHatKlassifikations = new ArrayList<DokumentHatKlassifikation>();
	private List<DokumentHatDeskriptor> dokumentHatDeskriptors = new ArrayList<DokumentHatDeskriptor>();
	private List<DokumentHatFreierbegriff> dokumentHatFreierbegriffs = new ArrayList<DokumentHatFreierbegriff>();

	public Dokument() {
	}

	public Dokument(Produktionsweg produktionsweg, Status status, Date datumMetis) {
		this.produktionsweg = produktionsweg;
		this.status = status;
		this.datumMetis = datumMetis;
	}

	public Dokument(Auswertungstaetigkeit auswertungstaetigkeit, Bearbeiter bearbeiterByVerantwortlicher,
			Bearbeiter bearbeiterByAuswerter, Datenlieferung datenlieferung, Konferenzereignis konferenzereignis,
			Konferenzverbund konferenzverbund, Produktionsweg produktionsweg, Quelle quelle, Status status,
			String dokNr, String statusattribute, String doi, String url, String vonSeite, String bisSeite,
			String seiten, String tabellen, String abbildungen, String bibliografischeQuellen, String orginalNr,
			String foerderKz, String paperNr, int prodWoche, int prodMonat, int prodJahr, Date datumMetis,
			Date datumFtxErzeugung, Date statusAenderung, Boolean autindex, Date openAccess, String orginalKeywords,
			String bemerkungErfassung, String bemerkungBezug, String bemerkungBibliografie,
			List<Exportdienst> exportdiensts, List<Fachdatenbank> fachdatenbanks, List<Abstract> abstracts,
			List<Benachrichtigung> benachrichtigungs, List<DokumentHatAutor> dokumentHatAutors, List<Formel> formels,
			List<Institution> institutions, List<Dokumentform> dokumentforms, List<Dokfeld> dokfelds,
			List<Dateilink> dateilinks, List<Doktitel> doktitels, List<Sprache> spraches, List<Dokumentart> dokumentarts,
			List<Protokoll> protokolls, List<DokumentHatKlassifikation> dokumentHatKlassifikations,
			List<DokumentHatDeskriptor> dokumentHatDeskriptors,
			List<DokumentHatFreierbegriff> dokumentHatFreierbegriffs) {
		this.auswertungstaetigkeit = auswertungstaetigkeit;
		this.bearbeiterByVerantwortlicher = bearbeiterByVerantwortlicher;
		this.bearbeiterByAuswerter = bearbeiterByAuswerter;
		this.datenlieferung = datenlieferung;
		this.konferenzereignis = konferenzereignis;
		this.konferenzverbund = konferenzverbund;
		this.produktionsweg = produktionsweg;
		this.quelle = quelle;
		this.status = status;
		this.dokNr = dokNr;
		this.statusattribute = statusattribute;
		this.doi = doi;
		this.url = url;
		this.vonSeite = vonSeite;
		this.bisSeite = bisSeite;
		this.seiten = seiten;
		this.tabellen = tabellen;
		this.abbildungen = abbildungen;
		this.bibliografischeQuellen = bibliografischeQuellen;
		this.orginalNr = orginalNr;
		this.foerderKz = foerderKz;
		this.paperNr = paperNr;
		this.prodWoche = prodWoche;
		this.prodMonat = prodMonat;
		this.prodJahr = prodJahr;
		this.datumMetis = datumMetis;
		this.datumFtxErzeugung = datumFtxErzeugung;
		this.statusAenderung = statusAenderung;
		this.autindex = autindex;
		this.openAccess = openAccess;
		this.orginalKeywords = orginalKeywords;
		this.bemerkungErfassung = bemerkungErfassung;
		this.bemerkungBezug = bemerkungBezug;
		this.bemerkungBibliografie = bemerkungBibliografie;
		this.exportdiensts = exportdiensts;
		this.fachdatenbanks = fachdatenbanks;
		this.abstracts = abstracts;
		this.benachrichtigungs = benachrichtigungs;
		this.dokumentHatAutors = dokumentHatAutors;
		this.formels = formels;
		this.institutions = institutions;
		this.dokumentforms = dokumentforms;
		this.dokfelds = dokfelds;
		this.dateilinks = dateilinks;
		this.doktitels = doktitels;
		this.spraches = spraches;
		this.dokumentarts = dokumentarts;
		this.protokolls = protokolls;
		this.dokumentHatKlassifikations = dokumentHatKlassifikations;
		this.dokumentHatDeskriptors = dokumentHatDeskriptors;
		this.dokumentHatFreierbegriffs = dokumentHatFreierbegriffs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "iddokument", unique = true, nullable = false)
	public Integer getIdDokument() {
		return this.idDokument;
	}

	public void setIdDokument(Integer idDokument) {
		this.idDokument = idDokument;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "auswertungstaetigkeit_idauswertungstaetigkeit")
	public Auswertungstaetigkeit getAuswertungstaetigkeit() {
		return this.auswertungstaetigkeit;
	}

	public void setAuswertungstaetigkeit(Auswertungstaetigkeit auswertungstaetigkeit) {
		this.auswertungstaetigkeit = auswertungstaetigkeit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Verantwortlicher")
	public Bearbeiter getBearbeiterByVerantwortlicher() {
		return this.bearbeiterByVerantwortlicher;
	}

	public void setBearbeiterByVerantwortlicher(Bearbeiter bearbeiterByVerantwortlicher) {
		this.bearbeiterByVerantwortlicher = bearbeiterByVerantwortlicher;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Auswerter")
	public Bearbeiter getBearbeiterByAuswerter() {
		return this.bearbeiterByAuswerter;
	}

	public void setBearbeiterByAuswerter(Bearbeiter bearbeiterByAuswerter) {
		this.bearbeiterByAuswerter = bearbeiterByAuswerter;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "datenlieferung_iddatenlieferung")
	public Datenlieferung getDatenlieferung() {
		return this.datenlieferung;
	}

	public void setDatenlieferung(Datenlieferung datenlieferung) {
		this.datenlieferung = datenlieferung;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Konferenzereignis_idkonferenzereignis")
	public Konferenzereignis getKonferenzereignis() {
		return this.konferenzereignis;
	}

	public void setKonferenzereignis(Konferenzereignis konferenzereignis) {
		this.konferenzereignis = konferenzereignis;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Konferenzverbund_idkonferenzverbund")
	public Konferenzverbund getKonferenzverbund() {
		return this.konferenzverbund;
	}

	public void setKonferenzverbund(Konferenzverbund konferenzverbund) {
		this.konferenzverbund = konferenzverbund;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Produktionsweg_idproduktionsweg", nullable = false)
	public Produktionsweg getProduktionsweg() {
		return this.produktionsweg;
	}

	public void setProduktionsweg(Produktionsweg produktionsweg) {
		this.produktionsweg = produktionsweg;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Quelle_idquelle")
	public Quelle getQuelle() {
		return this.quelle;
	}

	public void setQuelle(Quelle quelle) {
		this.quelle = quelle;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status_idstatus", nullable = false)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@Column(name = "Doknr", length = 15)
	public String getDokNr() {
		return this.dokNr;
	}

	public void setDokNr(String dokNr) {
		this.dokNr = dokNr;
	}

	@Column(name = "statusattribute", length = 16777215)
	public String getStatusattribute() {
		return this.statusattribute;
	}

	public void setStatusattribute(String statusattribute) {
		this.statusattribute = statusattribute;
	}

	@Column(name = "DOI")
	public String getDoi() {
		return this.doi;
	}

	public void setDoi(String doi) {
		this.doi = doi;
	}

	@Column(name = "URL")
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Column(name = "vonseite", length = 45)
	public String getVonSeite() {
		return this.vonSeite;
	}

	public void setVonSeite(String vonSeite) {
		this.vonSeite = vonSeite;
	}

	@Column(name = "bisseite", length = 45)
	public String getBisSeite() {
		return this.bisSeite;
	}

	public void setBisSeite(String bisSeite) {
		this.bisSeite = bisSeite;
	}

	@Column(name = "Seiten", length = 45)
	public String getSeiten() {
		return this.seiten;
	}

	public void setSeiten(String seiten) {
		this.seiten = seiten;
	}

	@Column(name = "Tabellen", length = 45)
	public String getTabellen() {
		return this.tabellen;
	}

	public void setTabellen(String tabellen) {
		this.tabellen = tabellen;
	}

	@Column(name = "Abbildungen", length = 45)
	public String getAbbildungen() {
		return this.abbildungen;
	}

	public void setAbbildungen(String abbildungen) {
		this.abbildungen = abbildungen;
	}

	@Column(name = "Bibliografischequellen", length = 45)
	public String getBibliografischeQuellen() {
		return this.bibliografischeQuellen;
	}

	public void setBibliografischeQuellen(String bibliografischeQuellen) {
		this.bibliografischeQuellen = bibliografischeQuellen;
	}

	@Column(name = "Orginalnr", length = 45)
	public String getOrginalNr() {
		return this.orginalNr;
	}

	public void setOrginalNr(String orginalNr) {
		this.orginalNr = orginalNr;
	}

	@Column(name = "Foerderkz")
	public String getFoerderKz() {
		return this.foerderKz;
	}

	public void setFoerderKz(String foerderKz) {
		this.foerderKz = foerderKz;
	}

	@Column(name = "Papernr")
	public String getPaperNr() {
		return this.paperNr;
	}

	public void setPaperNr(String paperNr) {
		this.paperNr = paperNr;
	}

	@Column(name = "Prodwoche")
	public int getProdWoche() {
		return this.prodWoche;
	}

	public void setProdWoche(int prodWoche) {
		this.prodWoche = prodWoche;
	}

	@Column(name = "Prodmonat")
	public int getProdMonat() {
		return this.prodMonat;
	}

	public void setProdMonat(int prodMonat) {
		this.prodMonat = prodMonat;
	}

	@Column(name = "Prodjahr")
	public int getProdJahr() {
		return this.prodJahr;
	}

	public void setProdJahr(int prodJahr) {
		this.prodJahr = prodJahr;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Datum_Metis", nullable = false, length = 19)
	public Date getDatumMetis() {
		return this.datumMetis;
	}

	public void setDatumMetis(Date datumMetis) {
		this.datumMetis = datumMetis;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Datum_FTX_Erzeugung", length = 19)
	public Date getDatumFtxErzeugung() {
		return this.datumFtxErzeugung;
	}

	public void setDatumFtxErzeugung(Date datumFtxErzeugung) {
		this.datumFtxErzeugung = datumFtxErzeugung;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Statusaenderung", length = 19)
	public Date getStatusAenderung() {
		return this.statusAenderung;
	}

	public void setStatusAenderung(Date statusAenderung) {
		this.statusAenderung = statusAenderung;
	}

	@Column(name = "Autindex")
	public Boolean getAutindex() {
		return this.autindex;
	}

	public void setAutindex(Boolean autindex) {
		this.autindex = autindex;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Openaccess", length = 10)
	public Date getOpenAccess() {
		return this.openAccess;
	}

	public void setOpenAccess(Date openAccess) {
		this.openAccess = openAccess;
	}

	@Column(name = "Orginalkeywords")
	public String getOrginalKeywords() {
		return this.orginalKeywords;
	}

	public void setOrginalKeywords(String orginalKeywords) {
		this.orginalKeywords = orginalKeywords;
	}

	@Column(name = "Bemerkungerfassung", length = 16777215)
	public String getBemerkungErfassung() {
		return this.bemerkungErfassung;
	}

	public void setBemerkungErfassung(String bemerkungErfassung) {
		this.bemerkungErfassung = bemerkungErfassung;
	}

	@Column(name = "Bemerkungbezug", length = 16777215)
	public String getBemerkungBezug() {
		return this.bemerkungBezug;
	}

	public void setBemerkungBezug(String bemerkungBezug) {
		this.bemerkungBezug = bemerkungBezug;
	}

	@Column(name = "Bemerkungbibliografie", length = 16777215)
	public String getBemerkungBibliografie() {
		return this.bemerkungBibliografie;
	}

	public void setBemerkungBibliografie(String bemerkungBibliografie) {
		this.bemerkungBibliografie = bemerkungBibliografie;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dokument_ist_in_exportdienst", catalog = "metis", joinColumns = {
			@JoinColumn(name = "dokument_iddokument", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "exportdienst_idexportDienst", nullable = false, updatable = false) })
	public List<Exportdienst> getExportdiensts() {
		return this.exportdiensts;
	}

	public void setExportdiensts(List<Exportdienst> exportdiensts) {
		this.exportdiensts = exportdiensts;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dokument_hat_fachdatenbank", catalog = "metis", joinColumns = {
			@JoinColumn(name = "dokument_iddokument", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "fachdatenbank_idfachdatenbank", nullable = false, updatable = false) })
	public List<Fachdatenbank> getFachdatenbanks() {
		return this.fachdatenbanks;
	}

	public void setFachdatenbanks(List<Fachdatenbank> fachdatenbanks) {
		this.fachdatenbanks = fachdatenbanks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dokument")
	public List<Abstract> getAbstracts() {
		return this.abstracts;
	}

	public void setAbstracts(List<Abstract> abstracts) {
		this.abstracts = abstracts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dokument")
	public List<Benachrichtigung> getBenachrichtigungs() {
		return this.benachrichtigungs;
	}

	public void setBenachrichtigungs(List<Benachrichtigung> benachrichtigungs) {
		this.benachrichtigungs = benachrichtigungs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dokument")
	public List<DokumentHatAutor> getDokumentHatAutors() {
		return this.dokumentHatAutors;
	}

	public void setDokumentHatAutors(List<DokumentHatAutor> dokumentHatAutors) {
		this.dokumentHatAutors = dokumentHatAutors;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dokument_hat_formel", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Dokument_iddokument", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Formel_idformel", nullable = false, updatable = false) })
	public List<Formel> getFormels() {
		return this.formels;
	}

	public void setFormels(List<Formel> formels) {
		this.formels = formels;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dokument_hat_institution", catalog = "metis", joinColumns = {
			@JoinColumn(name = "dokument_iddokument", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "institution_idinstitution", nullable = false, updatable = false) })
	public List<Institution> getInstitutions() {
		return this.institutions;
	}

	public void setInstitutions(List<Institution> institutions) {
		this.institutions = institutions;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dokument_hat_dokumentform", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Dokument_iddokument", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Dokumentform_iddokumentform", nullable = false, updatable = false) })
	public List<Dokumentform> getDokumentforms() {
		return this.dokumentforms;
	}

	public void setDokumentforms(List<Dokumentform> dokumentforms) {
		this.dokumentforms = dokumentforms;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dokument")
	public List<Dokfeld> getDokfelds() {
		return this.dokfelds;
	}

	public void setDokfelds(List<Dokfeld> dokfelds) {
		this.dokfelds = dokfelds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dokument")
	public List<Dateilink> getDateilinks() {
		return this.dateilinks;
	}

	public void setDateilinks(List<Dateilink> dateilinks) {
		this.dateilinks = dateilinks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dokument")
	public List<Doktitel> getDoktitels() {
		return this.doktitels;
	}

	public void setDoktitels(List<Doktitel> doktitels) {
		this.doktitels = doktitels;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dokument_hat_sprache", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Dokument_iddokument", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Sprache_sprachcode", nullable = false, updatable = false) })
	public List<Sprache> getSpraches() {
		return this.spraches;
	}

	public void setSpraches(List<Sprache> spraches) {
		this.spraches = spraches;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dokument_hat_dokumentart", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Dokument_iddokument", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Dokumentart_iddokumentart", nullable = false, updatable = false) })
	public List<Dokumentart> getDokumentarts() {
		return this.dokumentarts;
	}

	public void setDokumentarts(List<Dokumentart> dokumentarts) {
		this.dokumentarts = dokumentarts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dokument")
	public List<Protokoll> getProtokolls() {
		return this.protokolls;
	}

	public void setProtokolls(List<Protokoll> protokolls) {
		this.protokolls = protokolls;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dokument")
	public List<DokumentHatKlassifikation> getDokumentHatKlassifikations() {
		return this.dokumentHatKlassifikations;
	}

	public void setDokumentHatKlassifikations(List<DokumentHatKlassifikation> dokumentHatKlassifikations) {
		this.dokumentHatKlassifikations = dokumentHatKlassifikations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dokument")
	public List<DokumentHatDeskriptor> getDokumentHatDeskriptors() {
		return this.dokumentHatDeskriptors;
	}

	public void setDokumentHatDeskriptors(List<DokumentHatDeskriptor> dokumentHatDeskriptors) {
		this.dokumentHatDeskriptors = dokumentHatDeskriptors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dokument")
	public List<DokumentHatFreierbegriff> getDokumentHatFreierbegriffs() {
		return this.dokumentHatFreierbegriffs;
	}

	public void setDokumentHatFreierbegriffs(List<DokumentHatFreierbegriff> dokumentHatFreierbegriffs) {
		this.dokumentHatFreierbegriffs = dokumentHatFreierbegriffs;
	}

	@Override
	public String toString() {
		return "Dokument [idDokument=" + idDokument + ", auswertungstaetigkeit=" + auswertungstaetigkeit
				+ ", bearbeiterByVerantwortlicher=" + bearbeiterByVerantwortlicher + ", bearbeiterByAuswerter="
				+ bearbeiterByAuswerter + ", datenlieferung=" + datenlieferung + ", konferenzereignis="
				+ konferenzereignis + ", konferenzverbund=" + konferenzverbund + ", produktionsweg=" + produktionsweg
				+ ", quelle=" + quelle + ", status=" + status + ", dokNr=" + dokNr + ", statusattribute="
				+ statusattribute + ", doi=" + doi + ", url=" + url + ", vonSeite=" + vonSeite + ", bisSeite="
				+ bisSeite + ", seiten=" + seiten + ", tabellen=" + tabellen + ", abbildungen=" + abbildungen
				+ ", bibliografischeQuellen=" + bibliografischeQuellen + ", orginalNr=" + orginalNr + ", foerderKz="
				+ foerderKz + ", paperNr=" + paperNr + ", prodWoche=" + prodWoche + ", prodMonat=" + prodMonat
				+ ", prodJahr=" + prodJahr + ", datumMetis=" + datumMetis + ", datumFtxErzeugung=" + datumFtxErzeugung
				+ ", statusAenderung=" + statusAenderung + ", autindex=" + autindex + ", openAccess=" + openAccess
				+ ", orginalKeywords=" + orginalKeywords + ", bemerkungErfassung=" + bemerkungErfassung
				+ ", bemerkungBezug=" + bemerkungBezug + ", bemerkungBibliografie=" + bemerkungBibliografie
				+ ", exportdiensts=" + exportdiensts + ", fachdatenbanks=" + fachdatenbanks + ", abstracts=" + abstracts
				+ ", benachrichtigungs=" + benachrichtigungs + ", dokumentHatAutors=" + dokumentHatAutors + ", formels="
				+ formels + ", institutions=" + institutions + ", dokumentforms=" + dokumentforms + ", dokfelds="
				+ dokfelds + ", dateilinks=" + dateilinks + ", doktitels=" + doktitels + ", spraches=" + spraches
				+ ", dokumentarts=" + dokumentarts + ", protokolls=" + protokolls + ", dokumentHatKlassifikations="
				+ dokumentHatKlassifikations + ", dokumentHatDeskriptors=" + dokumentHatDeskriptors
				+ ", dokumentHatFreierbegriffs=" + dokumentHatFreierbegriffs + "]";
	}

}
