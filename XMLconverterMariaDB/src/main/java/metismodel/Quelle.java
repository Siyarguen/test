package metismodel;
// default package
// Generated 05.09.2018 08:32:48 by Hibernate Tools 4.3.5.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Quelle generated by hbm2java
 */
@Entity
@Table(name = "quelle", catalog = "metis")
public class Quelle implements java.io.Serializable {

	private int idQuelle;
	private Bearbeiter bearbeiter;
	private Periodika periodika;
	private String quellenNr;
	private String band;
	private String heft;
	private int jahr;
	private String tibsignatur;
	private String tibstandort;
	private String url;
	private String titel;
	private String subTitel;
	private String extraTitel;
	private boolean auszuwerten;
	private String bemerkungBibliografie;
	private Date eingangsdatum;
	private int erscheinungsjahr;
	private Boolean openAccess;
	private String bemerkungBezug;
	private String bemerkungErfassung;
	private List<Fachdatenbank> fachdatenbanks = new ArrayList<Fachdatenbank>();
	private List<Institution> institutions = new ArrayList<Institution>();
	private List<Dokument> dokuments = new ArrayList<Dokument>();
	private List<Benachrichtigung> benachrichtigungs = new ArrayList<Benachrichtigung>();
	private List<Protokoll> protokolls = new ArrayList<Protokoll>();
	private List<Konferenzverbund> konferenzverbunds = new ArrayList<Konferenzverbund>();
	private List<Dokumentart> dokumentarts = new ArrayList<Dokumentart>();
	private List<Produktionsweg> produktionswegs = new ArrayList<Produktionsweg>();
	private List<Dokumentform> dokumentforms = new ArrayList<Dokumentform>();
	private List<Konferenzereignis> konferenzereignises = new ArrayList<Konferenzereignis>();
	private List<Isbn> isbns = new ArrayList<Isbn>(0);
	private List<Verlag> verlags = new ArrayList<Verlag>();

	public Quelle() {
	}

	public Quelle(boolean auszuwerten) {
		this.auszuwerten = auszuwerten;
	}

	public Quelle(Bearbeiter bearbeiter, Periodika periodika, String quellenNr, String band, String heft, int jahr,
			String tibsignatur, String tibstandort, String url, String titel, String subTitel, String extraTitel,
			boolean auszuwerten, String bemerkungBibliografie, Date eingangsdatum, int erscheinungsjahr,
			Boolean openAccess, String bemerkungBezug, String bemerkungErfassung, List<Fachdatenbank> fachdatenbanks,
			List<Institution> institutions, List<Dokument> dokuments, List<Benachrichtigung> benachrichtigungs,
			List<Protokoll> protokolls, List<Konferenzverbund> konferenzverbunds, List<Dokumentart> dokumentarts,
			List<Produktionsweg> produktionswegs, List<Dokumentform> dokumentforms,
			List<Konferenzereignis> konferenzereignises, List<Isbn> isbns, List<Verlag> verlags) {
		this.bearbeiter = bearbeiter;
		this.periodika = periodika;
		this.quellenNr = quellenNr;
		this.band = band;
		this.heft = heft;
		this.jahr = jahr;
		this.tibsignatur = tibsignatur;
		this.tibstandort = tibstandort;
		this.url = url;
		this.titel = titel;
		this.subTitel = subTitel;
		this.extraTitel = extraTitel;
		this.auszuwerten = auszuwerten;
		this.bemerkungBibliografie = bemerkungBibliografie;
		this.eingangsdatum = eingangsdatum;
		this.erscheinungsjahr = erscheinungsjahr;
		this.openAccess = openAccess;
		this.bemerkungBezug = bemerkungBezug;
		this.bemerkungErfassung = bemerkungErfassung;
		this.fachdatenbanks = fachdatenbanks;
		this.institutions = institutions;
		this.dokuments = dokuments;
		this.benachrichtigungs = benachrichtigungs;
		this.protokolls = protokolls;
		this.konferenzverbunds = konferenzverbunds;
		this.dokumentarts = dokumentarts;
		this.produktionswegs = produktionswegs;
		this.dokumentforms = dokumentforms;
		this.konferenzereignises = konferenzereignises;
		this.isbns = isbns;
		this.verlags = verlags;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idquelle", unique = true, nullable = false)
	public int getIdQuelle() {
		return this.idQuelle;
	}

	public void setIdQuelle(int idQuelle) {
		this.idQuelle = idQuelle;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Verantwortlicher")
	public Bearbeiter getBearbeiter() {
		return this.bearbeiter;
	}

	public void setBearbeiter(Bearbeiter bearbeiter) {
		this.bearbeiter = bearbeiter;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "Periodika_ZCode", referencedColumnName = "ZCode"),
			@JoinColumn(name = "Periodika_Version", referencedColumnName = "Version") })
	public Periodika getPeriodika() {
		return this.periodika;
	}

	public void setPeriodika(Periodika periodika) {
		this.periodika = periodika;
	}

	@Column(name = "Quellennr", length = 15)
	public String getQuellenNr() {
		return this.quellenNr;
	}

	public void setQuellenNr(String quellenNr) {
		this.quellenNr = quellenNr;
	}

	@Column(name = "Band", length = 10)
	public String getBand() {
		return this.band;
	}

	public void setBand(String band) {
		this.band = band;
	}

	@Column(name = "Heft", length = 10)
	public String getHeft() {
		return this.heft;
	}

	public void setHeft(String heft) {
		this.heft = heft;
	}

	@Column(name = "Jahr")
	public int getJahr() {
		return this.jahr;
	}

	public void setJahr(int jahr) {
		this.jahr = jahr;
	}

	@Column(name = "TIBSignatur", length = 45)
	public String getTibsignatur() {
		return this.tibsignatur;
	}

	public void setTibsignatur(String tibsignatur) {
		this.tibsignatur = tibsignatur;
	}

	@Column(name = "TIBStandort", length = 45)
	public String getTibstandort() {
		return this.tibstandort;
	}

	public void setTibstandort(String tibstandort) {
		this.tibstandort = tibstandort;
	}

	@Column(name = "URL", length = 45)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Column(name = "Titel")
	public String getTitel() {
		return this.titel;
	}

	public void setTitel(String titel) {
		this.titel = titel;
	}

	@Column(name = "Subtitel")
	public String getSubTitel() {
		return this.subTitel;
	}

	public void setSubTitel(String subTitel) {
		this.subTitel = subTitel;
	}

	@Column(name = "Extratitel")
	public String getExtraTitel() {
		return this.extraTitel;
	}

	public void setExtraTitel(String extraTitel) {
		this.extraTitel = extraTitel;
	}

	@Column(name = "auszuwerten", nullable = false)
	public boolean isAuszuwerten() {
		return this.auszuwerten;
	}

	public void setAuszuwerten(boolean auszuwerten) {
		this.auszuwerten = auszuwerten;
	}

	@Column(name = "Bemerkungbibliografie", length = 16777215)
	public String getBemerkungBibliografie() {
		return this.bemerkungBibliografie;
	}

	public void setBemerkungBibliografie(String bemerkungBibliografie) {
		this.bemerkungBibliografie = bemerkungBibliografie;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Eingangsdatum", length = 19)
	public Date getEingangsdatum() {
		return this.eingangsdatum;
	}

	public void setEingangsdatum(Date eingangsdatum) {
		this.eingangsdatum = eingangsdatum;
	}

	@Column(name = "Erscheinungsjahr")
	public int getErscheinungsjahr() {
		return this.erscheinungsjahr;
	}

	public void setErscheinungsjahr(int erscheinungsjahr) {
		this.erscheinungsjahr = erscheinungsjahr;
	}

	@Column(name = "Openaccess")
	public Boolean getOpenAccess() {
		return this.openAccess;
	}

	public void setOpenAccess(Boolean openAccess) {
		this.openAccess = openAccess;
	}

	@Column(name = "Bemerkungbezug", length = 16777215)
	public String getBemerkungBezug() {
		return this.bemerkungBezug;
	}

	public void setBemerkungBezug(String bemerkungBezug) {
		this.bemerkungBezug = bemerkungBezug;
	}

	@Column(name = "Bemerkungerfassung", length = 16777215)
	public String getBemerkungErfassung() {
		return this.bemerkungErfassung;
	}

	public void setBemerkungErfassung(String bemerkungErfassung) {
		this.bemerkungErfassung = bemerkungErfassung;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "quelle_hat_fachdatenbank", catalog = "metis", joinColumns = {
			@JoinColumn(name = "quelle_idquelle", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "fachdatenbank_idfachdatenbank", nullable = false, updatable = false) })
	public List<Fachdatenbank> getFachdatenbanks() {
		return this.fachdatenbanks;
	}

	public void setFachdatenbanks(List<Fachdatenbank> fachdatenbanks) {
		this.fachdatenbanks = fachdatenbanks;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "quelle_hrsg_von_institution", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Quelle_idquelle", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Institution_idinstitutionen", nullable = false, updatable = false) })
	public List<Institution> getInstitutions() {
		return this.institutions;
	}

	public void setInstitutions(List<Institution> institutions) {
		this.institutions = institutions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "quelle")
	public List<Dokument> getDokuments() {
		return this.dokuments;
	}

	public void setDokuments(List<Dokument> dokuments) {
		this.dokuments = dokuments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "quelle")
	public List<Benachrichtigung> getBenachrichtigungs() {
		return this.benachrichtigungs;
	}

	public void setBenachrichtigungs(List<Benachrichtigung> benachrichtigungs) {
		this.benachrichtigungs = benachrichtigungs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "quelle")
	public List<Protokoll> getProtokolls() {
		return this.protokolls;
	}

	public void setProtokolls(List<Protokoll> protokolls) {
		this.protokolls = protokolls;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "quelle_berichtet_ueber_konferenzverbund", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Quelle_idquelle", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Konferenzverbund_idkonferenzverbund", nullable = false, updatable = false) })
	public List<Konferenzverbund> getKonferenzverbunds() {
		return this.konferenzverbunds;
	}

	public void setKonferenzverbunds(List<Konferenzverbund> konferenzverbunds) {
		this.konferenzverbunds = konferenzverbunds;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "quelle_hat_dokumentart", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Quelle_idquelle", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Dokumentart_iddokumentart", nullable = false, updatable = false) })
	public List<Dokumentart> getDokumentarts() {
		return this.dokumentarts;
	}

	public void setDokumentarts(List<Dokumentart> dokumentarts) {
		this.dokumentarts = dokumentarts;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "quelle_hat_produktionsweg", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Quelle_idquelle", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Produktionsweg_idproduktionsweg", nullable = false, updatable = false) })
	public List<Produktionsweg> getProduktionswegs() {
		return this.produktionswegs;
	}

	public void setProduktionswegs(List<Produktionsweg> produktionswegs) {
		this.produktionswegs = produktionswegs;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "quelle_hat_dokumentform", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Quelle_idquelle", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Dokumentform_iddokumentform", nullable = false, updatable = false) })
	public List<Dokumentform> getDokumentforms() {
		return this.dokumentforms;
	}

	public void setDokumentforms(List<Dokumentform> dokumentforms) {
		this.dokumentforms = dokumentforms;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "quelle_berichtet_ueber_konferenzereignis", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Quelle_idquelle", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "Konferenzereignis_idkonferenzereignis", nullable = false, updatable = false) })
	public List<Konferenzereignis> getKonferenzereignises() {
		return this.konferenzereignises;
	}

	public void setKonferenzereignises(List<Konferenzereignis> konferenzereignises) {
		this.konferenzereignises = konferenzereignises;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "quelle")
	public List<Isbn> getIsbns() {
		return this.isbns;
	}

	public void setIsbns(List<Isbn> isbns) {
		this.isbns = isbns;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "quelle_hat_verlag", catalog = "metis", joinColumns = {
			@JoinColumn(name = "Quelle_idquelle", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "verlag_idverlag", nullable = false, updatable = false) })
	public List<Verlag> getVerlags() {
		return this.verlags;
	}

	public void setVerlags(List<Verlag> verlags) {
		this.verlags = verlags;
	}

	@Override
	public String toString() {
		return "Quelle [idQuelle=" + idQuelle + ", bearbeiter=" + bearbeiter + ", periodika=" + periodika
				+ ", quellenNr=" + quellenNr + ", band=" + band + ", heft=" + heft + ", jahr=" + jahr + ", tibsignatur="
				+ tibsignatur + ", tibstandort=" + tibstandort + ", url=" + url + ", titel=" + titel + ", subTitel="
				+ subTitel + ", extraTitel=" + extraTitel + ", auszuwerten=" + auszuwerten + ", bemerkungBibliografie="
				+ bemerkungBibliografie + ", eingangsdatum=" + eingangsdatum + ", erscheinungsjahr=" + erscheinungsjahr
				+ ", openAccess=" + openAccess + ", bemerkungBezug=" + bemerkungBezug + ", bemerkungErfassung="
				+ bemerkungErfassung + ", fachdatenbanks=" + fachdatenbanks + ", institutions=" + institutions
				+ ", dokuments=" + dokuments + ", benachrichtigungs=" + benachrichtigungs + ", protokolls=" + protokolls
				+ ", konferenzverbunds=" + konferenzverbunds + ", dokumentarts=" + dokumentarts + ", produktionswegs="
				+ produktionswegs + ", dokumentforms=" + dokumentforms + ", konferenzereignises=" + konferenzereignises
				+ ", isbns=" + isbns + ", verlags=" + verlags + "]";
	}

}
