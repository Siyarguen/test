package metismodel;
// default package
// Generated 05.09.2018 08:32:48 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Benachrichtigung generated by hbm2java
 */
@Entity
@Table(name = "benachrichtigung", catalog = "metis")
public class Benachrichtigung implements java.io.Serializable {

	private int idBenachrichtigung;
	private Bearbeiter bearbeiterByAdressat;
	private Bearbeiter bearbeiterByAutor;
	private Dokument dokument;
	private Konferenzereignis konferenzereignis;
	private Konferenzreihe konferenzreihe;
	private Periodika periodika;
	private Quelle quelle;
	private String benachrichtigung;
	private Date zeitstempel;

	public Benachrichtigung() {
	}

	public Benachrichtigung(Bearbeiter bearbeiterByAdressat, Bearbeiter bearbeiterByAutor, Date zeitstempel) {
		this.bearbeiterByAdressat = bearbeiterByAdressat;
		this.bearbeiterByAutor = bearbeiterByAutor;
		this.zeitstempel = zeitstempel;
	}

	public Benachrichtigung(Bearbeiter bearbeiterByAdressat, Bearbeiter bearbeiterByAutor, Dokument dokument,
			Konferenzereignis konferenzereignis, Konferenzreihe konferenzreihe, Periodika periodika, Quelle quelle,
			String benachrichtigung, Date zeitstempel) {
		this.bearbeiterByAdressat = bearbeiterByAdressat;
		this.bearbeiterByAutor = bearbeiterByAutor;
		this.dokument = dokument;
		this.konferenzereignis = konferenzereignis;
		this.konferenzreihe = konferenzreihe;
		this.periodika = periodika;
		this.quelle = quelle;
		this.benachrichtigung = benachrichtigung;
		this.zeitstempel = zeitstempel;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idbenachrichtigung", unique = true, nullable = false)
	public int getIdBenachrichtigung() {
		return this.idBenachrichtigung;
	}

	public void setIdBenachrichtigung(int idBenachrichtigung) {
		this.idBenachrichtigung = idBenachrichtigung;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Adressat", nullable = false)
	public Bearbeiter getBearbeiterByAdressat() {
		return this.bearbeiterByAdressat;
	}

	public void setBearbeiterByAdressat(Bearbeiter bearbeiterByAdressat) {
		this.bearbeiterByAdressat = bearbeiterByAdressat;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Autor", nullable = false)
	public Bearbeiter getBearbeiterByAutor() {
		return this.bearbeiterByAutor;
	}

	public void setBearbeiterByAutor(Bearbeiter bearbeiterByAutor) {
		this.bearbeiterByAutor = bearbeiterByAutor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "dokument_iddokument")
	public Dokument getDokument() {
		return this.dokument;
	}

	public void setDokument(Dokument dokument) {
		this.dokument = dokument;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "konferenzereignis_idkonferenzereignis")
	public Konferenzereignis getKonferenzereignis() {
		return this.konferenzereignis;
	}

	public void setKonferenzereignis(Konferenzereignis konferenzereignis) {
		this.konferenzereignis = konferenzereignis;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "konferenzreihe_idkonferenz", referencedColumnName = "idKonferenz"),
			@JoinColumn(name = "konferenzreihe_version", referencedColumnName = "Version") })
	public Konferenzreihe getKonferenzreihe() {
		return this.konferenzreihe;
	}

	public void setKonferenzreihe(Konferenzreihe konferenzreihe) {
		this.konferenzreihe = konferenzreihe;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "periodika_ZCode", referencedColumnName = "ZCode"),
			@JoinColumn(name = "periodika_Version", referencedColumnName = "Version") })
	public Periodika getPeriodika() {
		return this.periodika;
	}

	public void setPeriodika(Periodika periodika) {
		this.periodika = periodika;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "quelle_idquelle")
	public Quelle getQuelle() {
		return this.quelle;
	}

	public void setQuelle(Quelle quelle) {
		this.quelle = quelle;
	}

	@Column(name = "Benachrichtigung")
	public String getBenachrichtigung() {
		return this.benachrichtigung;
	}

	public void setBenachrichtigung(String benachrichtigung) {
		this.benachrichtigung = benachrichtigung;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Zeitstempel", nullable = false, length = 19)
	public Date getZeitstempel() {
		return this.zeitstempel;
	}

	public void setZeitstempel(Date zeitstempel) {
		this.zeitstempel = zeitstempel;
	}

	@Override
	public String toString() {
		return "Benachrichtigung [idBenachrichtigung=" + idBenachrichtigung + ", bearbeiterByAdressat="
				+ bearbeiterByAdressat + ", bearbeiterByAutor=" + bearbeiterByAutor + ", dokument=" + dokument
				+ ", konferenzereignis=" + konferenzereignis + ", konferenzreihe=" + konferenzreihe + ", periodika="
				+ periodika + ", quelle=" + quelle + ", benachrichtigung=" + benachrichtigung + ", zeitstempel="
				+ zeitstempel + "]";
	}

	
	
	
}
